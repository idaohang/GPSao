%% BELL fix con 1 pico por UF
for k=1:5
    centers = [25 75 25 75; 25 25 75 75]';

    w = [100 100 100 100];

    h = [1,1,1,1];

    for i=1:4
        uf{k}{i} = fbellfix(centers(i,:),w(i),h(i), false);
    end
end
save UFfix uf

%% BELL fix con dos bells para mostrar como funciona GPS
centers = [25 75; 25 75]';

w = [100 100];

h = [1,1];

for i=1:2
    uf{1}{i} = fbellfix(centers(i,:),w(i),h(i), false);
end
save UFfixforGPS uf


%% FSINC

clf

A = [0 100]; 
B = [100 100];
C = [0 0];
D = [100 0];

r = 2;
h = 2;

uf{1}{1} = fsinc(A,r,h);
uf{1}{2} = fsinc(B,r,h);
uf{1}{3} = fsinc(C,r,h);
uf{1}{4} = fsinc(D,r,h);

clf
colormap('default')

for i=1:4
    subplot(2,2,i);
    ezmeshc(@(x,y) uf{1}{i}(x,y), [0 100 0 100]);
    hold on;
end
axis auto
figure

ufagg = uf{1}{1},uf{1}{2},uf{1}{3},uf{1}{4};

ezmeshc(@(x,y) ufagg(x,y), [0 100 0 100]);

save UFfix uf
%% BELL fix con 2 picos por UF
clf
a = 25;
b = 75;

w = [100];

A = [a b]; 
B = [b b];
C = [a a];
D = [b a];

h = [1];

uf{1}{1} = fbellfix(A,w,h, false);
uf{1}{2} = fbellfix(B,w,h, false);
uf{1}{3} = fbellfix(C,w,h, false);
uf{1}{4} = fbellfix(D,w,h, false);

clf
d=[0 0;100 100];
colormap('default')
for i=1:4
        subplot(2,2,i);
        ezmeshc(@(x,y) uf{1}{i}(x,y), reshape(d, 1, numel(d)));
        hold on;
end

axis auto
save UFfix uf

%% Generar función basada en Restricciones
ni = 2; %nissues
na = 1; %nagents
d=[zeros(1,ni);100*ones(1,ni)];
nc = 10;
L = [2 10];
norm = false;

[uf C] = fConsIto(d, ni, L, norm, nc)

clf

for i=1:na
        %subplot(1,1,i);
        fB = uf;
        [xa.x xa.y]=meshgrid(linspace(d(1,1), d(2,1),10));
        colormap('default')
        ezmeshc(@(x,y) fB([x y], d), reshape(d, 1, numel(d)));
        hold on;
end
axis auto

%% BELLs Random (UFrandom)

ni = 2; %nissues
na = 4; %nagents
d=[zeros(1,ni);100*ones(1,ni)];
for k=1:1
    for index = 1:na
        p = [0.01 0.5];% p fija la complejidad de las bells
        r = @(d,n)  (d*(100^n)*gamma(n/2+1)/pi^(n/2))^(1/n);
        uf{k}{index} = fbell(30, ni,[r(p(1),ni) r(p(2),ni)],[0.1 1],false);
    end
end

clf
colormap('default')
for i=1:4
        subplot(2,2,i);
        ezmeshc(@(x,y) uf{1}{i}(x,y), reshape(d, 1, numel(d)));
        hold on;
end
axis auto
save UFrandom uf
